version: '3.9'

services:
  backend:
    build: ./backend
    container_name: backend
    env_file:
      - .env
      - ./backend/.env
    ports:
      - '3000:3000'
    networks:
      - app-network
    volumes:
      - ./backend/uploads:/app/uploads
      - /app/node_modules
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build: ./frontend
    container_name: frontend
    env_file:
      - ./frontend/.env
    ports:
      - '8080:8080'
    networks:
      - app-network
    volumes:
      - /app/node_modules
      - ./frontend:/app

  postgres:
    image: postgres:16
    platform: linux/amd64
    container_name: app-db
    restart: always
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
